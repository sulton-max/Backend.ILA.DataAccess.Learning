// <auto-generated />
using System;
using EntityRelations.ApproachesB.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EntityRelations.ApproachesB.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20231101124957_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EntityRelations.ApproachesB.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4941dec3-36f6-412d-babc-abd92b79b9bb"),
                            Name = "Andrew Troelsen"
                        });
                });

            modelBuilder.Entity("EntityRelations.ApproachesB.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pages")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9582b0d-a6c7-4fdb-b17b-7e9d64e5b784"),
                            AuthorId = new Guid("4941dec3-36f6-412d-babc-abd92b79b9bb"),
                            Genre = "Programming",
                            Pages = 616,
                            Title = "Asp.Net Core in Action (2018)"
                        },
                        new
                        {
                            Id = new Guid("c50443a7-b9da-4060-a827-e9360a7491ca"),
                            AuthorId = new Guid("4941dec3-36f6-412d-babc-abd92b79b9bb"),
                            Genre = "Programming",
                            Pages = 1372,
                            Title = "Pro C# 7: With .NET and .NET Core (2017)"
                        });
                });

            modelBuilder.Entity("EntityRelations.ApproachesB.Models.Book", b =>
                {
                    b.HasOne("EntityRelations.ApproachesB.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
